- name: Install dependencies
  hosts: monasca
  sudo: yes
  pre_tasks:
    - name: apt-get update
      apt: update_cache=yes
    - name: Install virtualenv
      apt: name=python-virtualenv
  tasks:
    - name: Install postfix, needed by notification engine
      apt: name=postfix state=present
    - name: Install pip from apt
      apt: name=python-pip state=present
    - name: pip upgrade pip
      pip: name=pip state=latest
    - name: Install packages to allow pip to compile extensions as needed
      apt: name={{item}} state=present
      with_items:
        - python-dev
        - libssl-dev
        - libcrypto++-dev
        - build-essential
        - python-mysqldb
        - libmysqlclient-dev

- name: Copy artifacts to the container
  hosts: monasca
  sudo: yes
  vars:
    monasca_virtualenv_dir: /opt/monasca
  tasks:
    - file: path="{{monasca_virtualenv_dir}}" state=directory
    - name: Copy the artifacts
      copy: src=../../artifacts/ dest="{{monasca_virtualenv_dir}}"
    - name: Setup the virtualenv
      command: "virtualenv {{monasca_virtualenv_dir}}"
    - name: Install the python artifacts
      shell: "{{monasca_virtualenv_dir}}/bin/pip install --download-cache=/var/pip-cache {{monasca_virtualenv_dir}}/dist/{{item}}*"
      with_items:
        - python_monascaclient
        - monasca_agent
        - monasca_notification
    - name: Link the Java projects
      shell: "ln -s {{monasca_virtualenv_dir}}/target/{{item}}*.jar {{monasca_virtualenv_dir}}/{{item}}.jar"
      with_items:
        - monasca-api
        - monasca-persister
        - monasca-thresh

- name: Setup Keystone users/endpoints, requires keystone admin url be exposed
  hosts: monasca
  sudo: yes
  vars:
    keystone_url: "{{ keystone_admin_url }}"
  roles:
    - {role: monasca-keystone, tags: [keystone]}

- name: Installs DBs, kafka and other core dependencies.
  hosts: monasca
  sudo: yes
  roles:
    - {role: zookeeper, tags: [zookeeper]}
    - {role: kafka, tags: [kafka]}
    - {role: influxdb, tags: [influxdb]}
    - {role: percona, tags: [mysql, percona]}

- name: Sets up schema and install Monasca apps
  hosts: monasca
  sudo: yes
  vars:
    monasca_agent_service: monitoring
    monasca_checks:
      host_alive:
        init_config:
          ssh_port: 22
          ssh_timeout: 0.5
          ping_timeout: 1
        instances:
          - name: devstack
            host_name: 192.168.10.5
            alive_test: ssh
    skip_install: True
  roles:
    - {role: monasca-schema, tags: [schema]}
    - {role: monasca-api,
       influxdb_user: mon_api,
       influxdb_password: password,
       mysql_user: monapi,
       mysql_password: password,
       tags: [api]}
    - {role: monasca-persister,
       influxdb_user: mon_persister,
       influxdb_password: password,
       tags: [persister]}
    - {role: monasca-notification,
       mysql_user: notification,
       mysql_password: password,
       tags: [notification]}
    - {role: storm, storm_nimbus_enabled: true, storm_supervisor_enabled: true, skip_install: False, tags: [storm]}
    - {role: monasca-thresh,
       mysql_user: thresh,
       mysql_password: password,
       tags: [thresh]}
    - {role: monasca-agent, tags: [agent]}

- name: Define default alarms
  hosts: monasca
  gather_facts: no
  roles:
    - {role: monasca-default-alarms, tags: [alarms]}

- name: Run Smoke test
  hosts: monasca
  gather_facts: no
  sudo: yes
  vars:
    host_ip: "{{mini_mon}}"
    test_base: /opt/monasca/ci
  tasks:
    - name: Install the influxdb python library
      pip: name=influxdb virtualenv="{{monasca_virtualenv_dir}}"
      when: database_type == 'influxdb'

    - name: Create test basedir
      file: path="{{test_base}}" state=directory

    - name: Populate config vars
      template: src="../../tests/smoke/smoke2_configs.py.j2" dest="{{test_base}}/smoke2_configs.py"

    - name: Copy the smoke test to the box
      copy: src="../../tests/smoke/" dest="{{test_base}}/"

    - name: Run the smoke2 test
      command: "{{monasca_virtualenv_dir}}/bin/python {{test_base}}/smoke2.py"
      register: smoke2
    - debug: var=smoke2.stdout_lines

    - name: Run the smoke test
      command: "{{monasca_virtualenv_dir}}/bin/python {{test_base}}/smoke.py"
      environment:
        OS_USERNAME: "{{keystone_project_admin}}"
        OS_PASSWORD: "{{keystone_project_admin_password}}"
        OS_PROJECT_NAME: "{{keystone_project}}"
        OS_AUTH_URL: "{{keystone_admin_url}}"
      register: smoke
    - debug: var=smoke.stdout_lines
